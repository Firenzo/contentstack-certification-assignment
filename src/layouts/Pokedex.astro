---
import Footer from "../components/Footer.astro";
import BackButton from "../components/BackButton.astro";
import { defineTextColor, hexToHSL, setRoute, debugLog } from "../utils";
import getPokedexLayoutData from "../mappers/layouts/Pokedex";

const layoutData = await getPokedexLayoutData();
interface Props {
  headTitle: string;
  backgroundColor: string;
}

const { headTitle, backgroundColor } = Astro.props;
const pokedexURL = setRoute(layoutData.url);
const bg = hexToHSL(backgroundColor);
const backButtonTextColor = defineTextColor(bg);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Mitr:wght@300;500&family=Rubik:wght@300;700&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>
      {
        headTitle
          ? `${headTitle} | ${layoutData.siteTitle}`
          : layoutData.siteTitle
      }
    </title>
  </head>
  <body>
    <header>
      <BackButton
        href={pokedexURL}
        label={layoutData.backButtonLabel}
        textColor={backButtonTextColor}
      />
    </header>
    <div class="pokedex-layout flex-container">
      <slot />
    </div>
    <Footer text={layoutData.footerText} />
  </body>
</html>

<style is:global lang="scss" define:vars={{ bg }}>
  @use "../styles/breakpoints.scss" as *;
  @use "../styles/global.scss";

  body {
    background: var(--bg);
  }

  @include mq-up("desktop") {
    .pokedex-layout.flex-container {
      display: flex;
      margin-top: 10rem;

      main {
        width: 100%;
      }
    }

    header {
      position: sticky;
      top: 1rem;
    }
  }
</style>
